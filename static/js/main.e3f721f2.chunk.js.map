{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","style","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAmCeA,MA5Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAeG,MAAS,GAAtC,SAA2CP,IAC3C,oBAAII,UAAU,SAAd,SACKD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACZ,aAD+B,CAC/B,MAAkBN,UAAU,gBAA5B,SACKK,GADMC,QAKf,oBAAIN,UAAU,cAAd,SAA6BL,IAC7B,oBAAGK,UAAU,iBAAb,UAA+BH,EAAQU,MAAM,EAAG,KAAhD,gBC0CGC,G,kNAvDbC,MAAQ,CACNC,WAAU,EACVC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMEC,IAAMC,IAAI,yDANZ,gBAIJJ,EAJI,EAERK,KACEA,KACEL,OAON,EAAKM,SAAS,CAACN,SAAQD,WAAU,IAXvB,2C,kEAmBXQ,KAAKN,c,+BAEI,IAAD,EACqBM,KAAKT,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OAAO,yBAASX,UAAU,YAAnB,SACJU,EACA,qBAAKV,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGD,qBAAKA,UAAY,SAAjB,SACGW,EAAOP,KAAI,SAAAe,GAAK,OACnB,cAAC,EAAD,CAEAC,GAAMD,EAAMC,GACZzB,KAAQwB,EAAMxB,KACdC,MAASuB,EAAMvB,MACfC,QAAWsB,EAAMtB,QACjBC,OAAUqB,EAAME,mBAChBtB,OAAUoB,EAAMpB,QANToB,EAAMC,e,GAtCHE,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e3f721f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n//movie component가 state를 가질 필요가 없기 때문에\r\n// class component가 아닌 function component를 사용한다.\r\n//img에서 alt와 title을 사용하는 이유는 mouse를 위에 올렸을 때, movie의 이름이 있음.\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\" style = {{}}>{title}</h3>\r\n            <ul className=\"genres\">\r\n                {genres.map((genre, index) => (//map안의 리스트는 구별이 되어야함.\r\n                <li key = {index} className='genres__genre'>\r\n                    {genre}\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n            \r\n        </div>\r\n    </div>;\r\n}\r\n\r\nMovie.propTypes = {\r\n    id:PropTypes.number.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    poster:PropTypes.string.isRequired,\r\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\n//fetch위에 있는 작은 layer 예를 들면 땅콩 주위의 멋진 초콜릿. 설치하기 위해서는 'npm i axios'\nimport Movie from \"./Movie.js\"\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading:true,\n    movies: []\n  }\n\n  getMovies = async() => {\n    const {\n      data: {\n        data : {\n          movies}\n        }\n      } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\")//axios가 데이터를 받아올릴 때 까지\n    // 약간 시간이 걸림. 즉 componentDidMount함수가 끝날때까지 시간이 걸림. 그러므로 함수 이름 앞에 async를 넣거나\n    //getMovies를 만든 다음에 componentDidMount에서 호출하면 됨.async와 await를 붙임으로써 불러올때까지 기다려줌.\n    //await를 하기 위해서는 async함수 안에서 사용가능하다.\n    //console.log(movies.data.data.movies)대신 console.log(movies)를 하더라도 되도록 {data: {data : {movies}}}이짓을 함.\n    this.setState({movies, isLoading:false})//ES6에서 movies:movies를 movies하나로 축약해서 사용하더라도 js가 인식할 수 있다.\n  }\n  componentDidMount() {\n    /*\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 6000)//6초 js의 함수임. \n    */\n   this.getMovies();\n  }\n  render() {\n    const {isLoading, movies} = this.state;//밑에서 this.state.isLoading을 사용하고 싶지 않기 때문에 사용하는 것.\n    return <section className=\"container\">\n      {isLoading ? (\n       <div className=\"loader\">\n         <span className=\"loader_text\">Loading...</span>\n       </div> \n      ) : (\n        <div className = \"movies\">\n          {movies.map(movie => (\n        <Movie \n        key = {movie.id}\n        id = {movie.id} \n        year = {movie.year} \n        title = {movie.title} \n        summary = {movie.summary} \n        poster = {movie.medium_cover_image} \n        genres = {movie.genres}\n        />\n        ))}\n        </div>\n      )\n      }\n    </section>;\n  }\n}\n//yts.am에 접속한다음 맨 밑 하단의 api클릭. api endpoints 에서 list movies클릭. 링크중 json접속\n//위에 하는 짓 필요 없고 계속 주소가 바뀌기 때문에 https\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}